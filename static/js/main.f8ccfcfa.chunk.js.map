{"version":3,"sources":["image/18.PNG","image/4.PNG","image/5.jpg","Visited.js","WillVisit.js","WantVisit.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Visited","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","Component","WillVisit","WantVisit","App","state","visited","willvisit","wantvisit","changeHandler","e","data","objectSpread","_this","target","name","value","setState","newModel","innerText","swal","title","text","icon","submitHandler","console","log","previousSibling","previousElementSibling","push","removeTask","splice","index","_this2","className","src","image18","alt","onChange","size","onClick","map","visite","src_Visited","changeHandler1","removeTas","removeTas1","image4","wv","src_WillVisit","changeHandler2","removeTas2","image5","wnt","src_WantVisit","changeHandler3","removeTas3","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f8ccfcfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/18.8caec97d.PNG\";","module.exports = __webpack_public_path__ + \"static/media/4.c946fab5.PNG\";","module.exports = __webpack_public_path__ + \"static/media/5.3cd86773.jpg\";","\r\nimport React, { Component } from 'react'\r\n\r\n class Visited extends Component {\r\n     constructor(props){\r\n         super()\r\n     }\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        {/* <p>Visited City: {this.props.name}</p>\r\n       */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Visited;\r\n\r\n\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// import React, { Component } from 'react'\r\n\r\n// export default class Visited extends Component {\r\n//   render() {\r\n    \r\n//     return (\r\n      // <div>\r\n\r\n         {/* <select id=\"lists1\" style = {{background:\"linen\",width:\"170px\"}} > \r\n    <option value=\"Choose\">Choose</option>\r\n    <option value=\"Hawaii/Honolulu\">Hawaii/ Honolulu</option>\r\n    <option value=\"New York/New York City\">New York/New York City</option>\r\n    <option value=\"California/San Diego\">California/San Diego</option>\r\n    <option value=\"California/Los Angeles\">California/Los Angeles</option>\r\n    <option value=\"Minneapolis/Minnesota\">Minneapolis/Minnesota</option>\r\n    <option value=\"Minneapolis/Rochester\">Minneapolis/Rochester</option>\r\n    <option value=\"Florida/Orlando\">Florida/Orlando</option>\r\n    <option value=\"Florida/St petersburg\">Florida/St petersburg</option>\r\n    <option value=\"Florida/Clear Water\">Florida/Clear Water</option>\r\n    <option value=\"Pennsylvania/East Stroudsburg\">Pennsylvania/East Stroudsburg</option>\r\n    <option value=\"Pennsylvania/Philadelphia\">Pennsylvania//Philadelphia</option>\r\n    <option value=\"Egypt/Cairo\">Egypt/Cairo</option>\r\n    <option value=\"Egypt/North Coast\">Egypt/North Coast</option>\r\n    <option value=\"UAE/Dubai\"> UAE/Dubai</option>\r\n    <option value=\"UAE/Ras Alkhaimah\"> UAE/Ras Alkhaimah</option>\r\n    <option value=\"Turkey \">Turkey</option>\r\n    <option value=\"Kuwait \">Kuwait</option>\r\n  \r\n    </select>\r\n      </div>\r\n    )\r\n  }\r\n} */}\r\n\r\n    \r\n// Hawaii/ Honolulu\r\n// New York/New York City\r\n//     California/San Diego\r\n//     California/Los Angeles\r\n//    Minneapolis/Minnesota\r\n//     Minneapolis/Rochester\r\n//     Florida/Orlando\r\n//     Florida/St petersburg\r\n//     Florida/Clear Water\"\r\n//     Pennsylvania/East Stroudsburg\r\n//     Pennsylvania/Philadelphia\r\n//    Egypt/Cairo\r\n//     <Egypt/North Coast\r\n//     UAE/Dubai\r\n//     UAE/Ras Alkhaimah\r\n//     Turkey \r\n//     Kuwait \r\n\r\n// import React, { Component } from 'react';\r\n// import './App.css';\r\n// class Visited extends Component {\r\n//   state = {\r\n//     hide: 'false'\r\n//   }\r\n//   hideitems = () => {\r\n//     if (this.state.hide === 'false'){\r\n//       this.setState({hide: 'hidden'})\r\n//     } else {\r\n//       this.setState({hide: 'false'})\r\n//     }\r\n//   }\r\n//     render() {\r\n//       return (\r\n\r\n//        <li className={this.state.hide} onClick={this.hideitems}>\r\n//        {this.props.todo}\r\n//        </li>\r\n\r\n//       );\r\n//     }\r\n//   }\r\n// export default Listitem","import React, { Component } from 'react'\r\n\r\n class WillVisit extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n           {/* <p> Will Visit {this.props.name}</p>\r\n       */}\r\n      </div>    \r\n        // <select id=\"lists2\"style = {{background:\"linen\",width:\"170px\"}}>\r\n        // <option value=\"Choose \">Choose</option>\r\n        //     <option value=\"text 1\">Mecca</option>\r\n        //     <option value=\"text 2\">Jeddah</option>\r\n        //     <option value=\"text 3\">New York/ New York</option>\r\n        //     <option value=\"text 4\">Florida / Orlando</option>\r\n        // </select>\r\n\r\n        )\r\n    }\r\n}\r\nexport default WillVisit;\r\n\r\n","import React, { Component } from 'react'\r\n\r\nclass WantVisit extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n            {/* <p>Visited City: {this.props.name}</p> */}\r\n      \r\n      </div>\r\n        \r\n        // <select id=\"lists2\"style = {{background:\"linen\",width:\"170px\"}}>\r\n        // <option value=\"Choose \">Choose</option>\r\n        // <option value=\"text 1\">Santorini</option>\r\n        // <option value=\"text 2\">Seminyak</option>\r\n        // <option value=\"text 3\">Um What else?</option>\r\n       \r\n        // </select>\r\n    )\r\n  }\r\n}\r\nexport default WantVisit;","import React, { Component } from 'react'\nimport Visited from './Visited';\nimport WillVisit from './WillVisit';\nimport WantVisit from './WantVisit';\nimport image18 from './image/18.PNG'\nimport image4 from './image/4.PNG'\nimport image5 from './image/5.jpg'\n\n\n\nimport swal from 'sweetalert'\nimport './style.css';\n\n\nimport './App.css';\n\nclass App extends Component {\n\n  state= {\n   visited : [],\n   willvisit:[],\n   wantvisit:[],\n  }\n\n  changeHandler = (e) => {\n    let data = {...this.state}\n    data[e.target.name] = e.target.value\n    this.setState(data)\n  }\n\n  newModel= (e) => {\n    if (e.target.innerText === \"East Stroudsburg\") {\n      \nswal({title: \"PA/East Stroudsburg\",\n\ntext: \"lived from 2014 to 2017 - Got My Master Degree from East Stroudsburg University\",\n\n  icon: \"http://www.totsandtravel.com/images/hotels/US_PA/pocono_palace_resort_all_inclusive_east_stroudsburg_pennsylvania-main.jpg\" })\n    } else if(e.target.innerText === \"Mecca\"){\n      swal({title: \"KSA/Mecca🕋\",\n\n      text: \"Travel in  (11- Ramadan)-stay 23 days \",\n      \n        icon: \"https://blog.britishmuseum.org/wp-content/uploads/2017/08/Ka%E2%80%99ba-Mecca-1.jpg\" })\n          } else if(e.target.innerText === \"Santorini\"){\n            swal({title: \"santorini\",\n\ntext: \"Some day\",\n\n  icon: \"https://cdn.thecrazytourist.com/wp-content/uploads/2018/04/ccimage-shutterstock_632387108.jpg\" })\n          }else if(e.target.innerText === \"Hawaii\"){\n    swal({title: \"Hawaii/Honolulu\",\n\n    text: \" Honeymoon \",\n    \n      icon: \"https://www.classicvacations.com/sites/default/files/main-hawaii-pool_0.jpg\" })\n        } else if(e.target.innerText === \"Orlando\"){\n   \n      swal({title: \"FL/Orlando\",\n  \n     \n      text:\"Travel in 8 Aug/2019 -Many things for fun-especially I have lived from 2019 to 2013 __ I miss it😀\",\n      \n        icon: \"https://www.paymentsjournal.com/wp-content/uploads/2019/02/disney-2692578_1920.jpg\" })\n  } \n  else if(e.target.innerText === \"Turkey\"){\n   \n    swal({title: \"Turkey\",\n\n   \n    text:\"visited in 2010 with my family- 2018 Girls Trip\",\n    \n      icon: \"https://www.barcelo.com/pinandtravel/wp-content/uploads/2018/11/Ap1-17-1170x532.jpg\" })\n  }\n  }\n\n\n  submitHandler= (e) =>{\n    let data = {...this.state}\n    console.log(e.target.name);\n    console.log(e.target.previousSibling.value);\n    console.log(e.target.previousElementSibling.value);\n    \n    \n    \n    data[e.target.name].push(e.target.previousSibling.value)\n   this.setState(data)\n  }\n\n  removeTask = (e) => {\n\n    let data = {...this.state}\n\n    data[e.target.name].splice(e.target.index, 1)\n   this.setState(data)\n    ///\n    // var index= e.target.index;\n    // let newTodo= {...this.state}\n    // newTodo.todos.splice(index, 1);\n    // this.setState(newTodo);\n  }\n\n  // changeHandler = (e) => {\n  //   this.setState({ todo : { task : e.target.value}})\n  // }\n\n  // submitHandler= () =>{\n  //   let data = {...this.state}\n  //   data.todos.push(data.todo)\n  //  this.setState(data)\n  // }\n  // removeTask = (e) => {\n  //   var index= e.target.index;\n  //   let newTodo= {...this.state}\n  //   newTodo.todos.splice(index, 1);\n  //   this.setState(newTodo);\n  // }\n\n  // changeHandler= (e) => {\n  //   this.setState({ todo : { task : e.target.value}})\n  // }\n\n  // submitHandler = () =>{\n  //   let data = {...this.state}\n  //   data.todos.push(data.todo)\n  //  this.setState(data)\n  // }\n  // removeTask= (e) => {\n  //   var index= e.target.index;\n  //   let newTodo= {...this.state}\n  //   newTodo.todos.splice(index, 1);\n  //   this.setState(newTodo);\n  // }\n\n  render() {\n    \n    \n    return (\n      <div className=\"App\">\n        <h2>  Trips list</h2>\n\n        \n\n<div className = \"image-1\"/>  \n<div className=\"container\"> \n\n  <div className=\"container-1\">\n  \n\n    <img className='image-1' src={image18} alt= \"visited cities\" />\n    <h3>Visited City</h3>\n    <input name=\"visited_input\" \n          onChange={this.changeHandler}\n          size=\"80px\"/>\n        \n        <button  className=\"btn\" name=\"visited\" onClick={this.submitHandler}>Add to List</button>\n         {this.state.visited.map((visite) =>\n      <p><span onClick={this.newModel}>{visite}</span><button name=\"visited\" onClick={this.removeTask}>X</button></p>\n      \n          )}\n         <Visited changeHandler={this.changeHandler1} submitHandler={this.submitHandler} removeTas={this.removeTas1} />\n    </div>\n\n\n   \n   <div className=\"container-2\">\n   \n<img className='image-1'  src={image4} alt=\"will visit\" />\n<h3>Will Visit</h3>\n<input name=\"willvisit_input\" \n          onChange={this.changeHandler}\n        />\n        \n <button className=\"btn\" name=\"willvisit\" onClick={this.submitHandler}>Add to List</button>\n         {this.state.willvisit.map((wv) =>\n        <p><span onClick={this.newModel}>{wv}</span><button name=\"willvisit\" onClick={this.removeTask}>X</button></p>\n        )}\n        <WillVisit  changeHandler={this.changeHandler2} submitHandler={this.submitHandler} removeTas={this.removeTas2}/>\n</div>\n\n\n \n\n\n<div className=\"container-3\">\n\n     <img className='image-1' src={image5} alt=\"want to visit\"/> \n     <h3>Want To visit</h3>\n       <input name=\"wantvisit_input\" \n          onChange={this.changeHandler}\n          />\n        <button  className=\"btn\"  name=\"wantvisit\" onClick={this.submitHandler}>Add to List</button>\n         \n         {this.state.wantvisit.map((wnt) =>\n         \n        <p><span onClick={this.newModel}>{wnt}</span><button name='wantvisit' onClick={this.removeTask}>X</button></p>\n        )}\n        <WantVisit changeHandler={this.changeHandler3} submitHandler={this.submitHandler} removeTas={this.removeTas3}/>\n        </div> \n</div>\n         <footer className=\"footer\">\n   <p>“If the plan doesn’t work, change the plan, but never the goal.💪\n     ” Rehab Alsaadoun❤️</p>\n  </footer>\n     \n      </div>\n   );\n  }\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n"],"sourceRoot":""}